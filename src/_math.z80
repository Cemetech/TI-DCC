.module math
.local
_modulestart:



;in:   E=multiplier H=multiplicand
;out:  HL=product
;dstr: DE F
multEandH:
	push bc
		ld L,0
		ld d,0
		sla h
		jr nc,$+3
		ld L,e
		ld b,7
_multEandHLoop:
		add hl,hl
		jr nc,$+3
		add hl,de
		djnz _multEandHLoop
	pop bc
	ret
	
	
;in:   HL=dividend C=divisor
;out:  HL=quotient A=remainder
;dest: F
divHLandC:
	push bc
		xor a
		ld b,16
-:		add hl,hl
		rla
		cp c
		jr c,$+4
		sub c
		inc L
		djnz {-}
	pop bc
	ret

	
;in:   A=multiplier DE=multiplicand
;out:  A:HL=product
;dest: F DE
multDEandA:
	push bc
		ld hl,0
		ld c,L
		add a,a
		jr nc,$+4
		ld h,d
		ld l,e
		ld b,7
-:		add hl,hl
		rla
		jr nc,$+4
		add hl,de
		adc a,c
		djnz {-}
	pop bc
	ret
	

.echoln "MODULE math SIZE : ",$-_modulestart
.endlocal
.endmodule